{
  "openapi": "3.0.0",
  "paths": {
    "/api/batches": {
      "get": {
        "tags": ["Batches"],
        "summary": "Get all batches",
        "description": "Retrieves a list of batches with optional status filtering",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter batches by status",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "batches fetched successfully"
                    },
                    "batches": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Batch"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Batches"],
        "summary": "Create a new batch",
        "description": "Creates a new batch. Requires 'upstream' or 'admin' role.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBatchRequest"
              },
              "examples": {
                "sampleBatch": {
                  "value": {
                    "shipmentId": "SHIP12345",
                    "shipmentDate": "2023-06-15",
                    "arrivalDate": "2023-06-20",
                    "category": "Electronics",
                    "origin": "China",
                    "destination": "USA",
                    "weight": 1500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Batch created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Batch created successfully"
                    },
                    "batch": {
                      "$ref": "#/components/schemas/Batch"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "missingFields": {
                    "value": {
                      "error": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Batch with this shipment ID already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Batch": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64c9a4b7c9a4b7c9a4b7c9a4"
          },
          "createdBy": {
            "type": "string",
            "example": "64c9a4b7c9a4b7c9a4b7c9a4"
          },
          "shipmentId": {
            "type": "string",
            "example": "SHIP12345"
          },
          "shipmentDate": {
            "type": "string",
            "format": "date",
            "example": "2023-06-15"
          },
          "arrivalDate": {
            "type": "string",
            "format": "date",
            "example": "2023-06-20"
          },
          "category": {
            "type": "string",
            "example": "Electronics"
          },
          "origin": {
            "type": "string",
            "example": "China"
          },
          "destination": {
            "type": "string",
            "example": "USA"
          },
          "weight": {
            "type": "number",
            "example": 1500
          },
          "status": {
            "type": "string",
            "example": "pending"
          },
          "timeline": {
            "type": "object",
            "properties": {
              "collection": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateBatchRequest": {
        "type": "object",
        "required": [
          "shipmentId",
          "shipmentDate",
          "arrivalDate",
          "category",
          "origin",
          "destination",
          "weight"
        ],
        "properties": {
          "shipmentId": {
            "type": "string",
            "description": "Unique identifier for the shipment",
            "example": "SHIP12345"
          },
          "shipmentDate": {
            "type": "string",
            "format": "date",
            "description": "Date when the shipment was sent",
            "example": "2023-06-15"
          },
          "arrivalDate": {
            "type": "string",
            "format": "date",
            "description": "Expected arrival date",
            "example": "2023-06-20"
          },
          "category": {
            "type": "string",
            "description": "Category of goods in the shipment",
            "example": "Electronics"
          },
          "origin": {
            "type": "string",
            "description": "Origin country/location",
            "example": "China"
          },
          "destination": {
            "type": "string",
            "description": "Destination country/location",
            "example": "USA"
          },
          "weight": {
            "type": "number",
            "description": "Total weight in kilograms",
            "example": 1500
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Error message describing the issue"
          },
          "error": {
            "type": "string",
            "description": "Present in some error responses",
            "example": "Missing required fields"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token for authentication"
      }
    }
  }
}